version: 2

container_config: &container_config
  docker:
    - image: mcdonaldmike/docker-azure:stable
  working_directory: /usr/local/lib
cache_key: &cache_key
  docker_cache-{{ checksum "Dockerfile" }}
restore_cache: &restore_cache
  restore_cache:
    name: Restore cache
    key: *cache_key
generate_tag_name: &generate_tag_name
  run:
    name: Generate tag name
    command: |
      echo 'Using tag $(echo "${CIRCLE_BRANCH////-}")...'
      echo 'export TAG_NAME=$(echo "${CIRCLE_BRANCH////-}")' >> $BASH_ENV
azure_login: &azure_login
  run:
    name: Login to Azure as CirleCI service principal
    command: |
      az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID --allow-no-subscriptions
jobs:
  build_image:
    <<: *container_config
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - *restore_cache
      - run:
          name: Build full docker image
          command: |
            if [ ! -f "docker-cache/image.tar" ]; then
              echo "Building full docker image..."
              docker build -t airflow .
              mkdir -p docker-cache
              docker save -o docker-cache/image.tar airflow
            else
              echo "Docker image found! Skipping build..."
            fi
      - save_cache:
          key: *cache_key
          paths:
            - docker-cache

  deploy_image:
    <<: *container_config
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - *restore_cache
      - *generate_tag_name
      - *azure_login
      - run:
          name: Login to Azure Container Registry
          command: |
            az acr login --name $AZURE_CONTAINER_REGISTRY
      - run:
          name: Load docker image
          command: |
            docker load < docker-cache/image.tar
      - run:
          name: Build partial image updates
          command: |
            docker build -f .circleci/Dockerfile -t airflow .
      - run:
          name: Tag as latest
          command: |
            docker tag airflow $IMAGE_NAME:latest
      - run:
          name: Tag as CircleCI tag
          command: |
            docker tag airflow $IMAGE_NAME:$TAG_NAME
      - run:
          name: Push images to Azure Container Registry
          command: |
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$TAG_NAME

  update_aks:
    <<: *container_config
    steps:
      - *azure_login
      - run:
          name: Login to Kubernetes cluster
          command: |
            az aks get-credentials --name $K8S_CLUSTER_NAME --resource-group $K8S_RESOURCE_GROUP
      - run:
          name: Apply Kubernetes configuration
          command: |
            kubectl apply -f k8s/
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_image:
          filters:
            branches:
              only:
                - master
            tags:
              only: /^[0-9]+(\.[0-9]+)*/
      - deploy_image:
          requires:
            - build_image
          filters:
            branches:
              ignore:
                - master
            tags:
              only: /^[0-9]+(\.[0-9]+)*/
      - update_aks:
          requires:
            - deploy_image
          filters:
            branches:
              ignore:
                - master
            tags:
              only: /^[0-9]+(\.[0-9]+)*/


