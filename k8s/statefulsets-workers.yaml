---
# Source: airflow/templates/statefulsets-workers.yaml
## Workers are not in deployment, but in StatefulSet, to allow each worker expose a mini-server
## that only serve logs, that will be used by the web server.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: airflow-worker
  labels:
    app: airflow
    component: worker
spec:
  serviceName: "airflow-worker"
  updateStrategy:
    ## Kill the workers as soon as possible, the scheduler will restart the failed job later
    type: RollingUpdate
  ## Use experimental burst mode for faster StatefulSet scaling
  ##   https://github.com/kubernetes/kubernetes/commit/c2c5051adf096ffd48bf1dcf5b11cb47e464ecdd
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app: airflow
      component: worker
  template:
    metadata:
      labels:
        app: airflow
        component: worker
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccountName: airflow
      containers:
        - name: airflow-worker
          imagePullPolicy: Always
          image: pudlmds.azurecr.io/airflow:1.10.2.4
          envFrom:
            - configMapRef:
                name: "airflow-env"
          env:          
            - name: FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-fernet
                  key: fernet-key
            - name: POSTGRES_USER
              value: airflowadmin
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgres-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-redis
                  key: redis-password
          args: ["worker"]
          ports:
            - name: wlog
              containerPort: 8793
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - mountPath: /usr/local/airflow/logs
              name: airflow-logs
      volumes:
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs-pv-claim